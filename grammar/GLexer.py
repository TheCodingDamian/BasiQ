# Generated from G.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\64")
        buf.write("\u0138\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2")
        buf.write("\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3")
        buf.write("\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3")
        buf.write("\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23")
        buf.write("\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3")
        buf.write("$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3")
        buf.write("*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3")
        buf.write("+\3+\3+\3+\3+\3+\3+\5+\u00fe\n+\3,\3,\3,\3,\3,\3,\3,\3")
        buf.write(",\3,\5,\u0109\n,\3-\6-\u010c\n-\r-\16-\u010d\3-\3-\6-")
        buf.write("\u0112\n-\r-\16-\u0113\5-\u0116\n-\3.\3.\7.\u011a\n.\f")
        buf.write(".\16.\u011d\13.\3/\3/\3/\3/\3\60\3\60\7\60\u0125\n\60")
        buf.write("\f\60\16\60\u0128\13\60\3\60\3\60\3\61\3\61\3\62\3\62")
        buf.write("\3\63\3\63\7\63\u0132\n\63\f\63\16\63\u0135\13\63\3\63")
        buf.write("\3\63\3\u0126\2\64\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n")
        buf.write("\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'")
        buf.write("\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ")
        buf.write("?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64\3")
        buf.write("\2\b\3\2\62;\4\2C\\c|\6\2\62;C\\aac|\5\2\13\f\17\17\"")
        buf.write("\"\3\2%%\3\2$$\2\u0143\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2")
        buf.write("\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2")
        buf.write("\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2")
        buf.write("\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!")
        buf.write("\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c")
        buf.write("\3\2\2\2\2e\3\2\2\2\3g\3\2\2\2\5i\3\2\2\2\7k\3\2\2\2\t")
        buf.write("m\3\2\2\2\13p\3\2\2\2\rr\3\2\2\2\17t\3\2\2\2\21y\3\2\2")
        buf.write("\2\23|\3\2\2\2\25\177\3\2\2\2\27\u0081\3\2\2\2\31\u0083")
        buf.write("\3\2\2\2\33\u0086\3\2\2\2\35\u0089\3\2\2\2\37\u008c\3")
        buf.write("\2\2\2!\u008f\3\2\2\2#\u0093\3\2\2\2%\u0096\3\2\2\2\'")
        buf.write("\u009a\3\2\2\2)\u00a1\3\2\2\2+\u00a4\3\2\2\2-\u00ac\3")
        buf.write("\2\2\2/\u00b1\3\2\2\2\61\u00b5\3\2\2\2\63\u00b8\3\2\2")
        buf.write("\2\65\u00be\3\2\2\2\67\u00c0\3\2\2\29\u00c2\3\2\2\2;\u00c5")
        buf.write("\3\2\2\2=\u00c7\3\2\2\2?\u00c9\3\2\2\2A\u00cc\3\2\2\2")
        buf.write("C\u00ce\3\2\2\2E\u00d0\3\2\2\2G\u00d2\3\2\2\2I\u00d4\3")
        buf.write("\2\2\2K\u00d7\3\2\2\2M\u00da\3\2\2\2O\u00dd\3\2\2\2Q\u00e0")
        buf.write("\3\2\2\2S\u00e3\3\2\2\2U\u00fd\3\2\2\2W\u0108\3\2\2\2")
        buf.write("Y\u010b\3\2\2\2[\u0117\3\2\2\2]\u011e\3\2\2\2_\u0122\3")
        buf.write("\2\2\2a\u012b\3\2\2\2c\u012d\3\2\2\2e\u012f\3\2\2\2gh")
        buf.write("\7]\2\2h\4\3\2\2\2ij\7.\2\2j\6\3\2\2\2kl\7_\2\2l\b\3\2")
        buf.write("\2\2mn\7\60\2\2no\7\60\2\2o\n\3\2\2\2pq\7<\2\2q\f\3\2")
        buf.write("\2\2rs\7?\2\2s\16\3\2\2\2tu\7h\2\2uv\7w\2\2vw\7p\2\2w")
        buf.write("x\7e\2\2x\20\3\2\2\2yz\7*\2\2z{\7+\2\2{\22\3\2\2\2|}\7")
        buf.write("/\2\2}~\7@\2\2~\24\3\2\2\2\177\u0080\7*\2\2\u0080\26\3")
        buf.write("\2\2\2\u0081\u0082\7+\2\2\u0082\30\3\2\2\2\u0083\u0084")
        buf.write("\7-\2\2\u0084\u0085\7?\2\2\u0085\32\3\2\2\2\u0086\u0087")
        buf.write("\7/\2\2\u0087\u0088\7?\2\2\u0088\34\3\2\2\2\u0089\u008a")
        buf.write("\7,\2\2\u008a\u008b\7?\2\2\u008b\36\3\2\2\2\u008c\u008d")
        buf.write("\7\61\2\2\u008d\u008e\7?\2\2\u008e \3\2\2\2\u008f\u0090")
        buf.write("\7\61\2\2\u0090\u0091\7\61\2\2\u0091\u0092\7?\2\2\u0092")
        buf.write("\"\3\2\2\2\u0093\u0094\7\'\2\2\u0094\u0095\7?\2\2\u0095")
        buf.write("$\3\2\2\2\u0096\u0097\7,\2\2\u0097\u0098\7,\2\2\u0098")
        buf.write("\u0099\7?\2\2\u0099&\3\2\2\2\u009a\u009b\7t\2\2\u009b")
        buf.write("\u009c\7g\2\2\u009c\u009d\7v\2\2\u009d\u009e\7w\2\2\u009e")
        buf.write("\u009f\7t\2\2\u009f\u00a0\7p\2\2\u00a0(\3\2\2\2\u00a1")
        buf.write("\u00a2\7k\2\2\u00a2\u00a3\7h\2\2\u00a3*\3\2\2\2\u00a4")
        buf.write("\u00a5\7g\2\2\u00a5\u00a6\7n\2\2\u00a6\u00a7\7u\2\2\u00a7")
        buf.write("\u00a8\7g\2\2\u00a8\u00a9\7\"\2\2\u00a9\u00aa\7k\2\2\u00aa")
        buf.write("\u00ab\7h\2\2\u00ab,\3\2\2\2\u00ac\u00ad\7g\2\2\u00ad")
        buf.write("\u00ae\7n\2\2\u00ae\u00af\7u\2\2\u00af\u00b0\7g\2\2\u00b0")
        buf.write(".\3\2\2\2\u00b1\u00b2\7h\2\2\u00b2\u00b3\7q\2\2\u00b3")
        buf.write("\u00b4\7t\2\2\u00b4\60\3\2\2\2\u00b5\u00b6\7k\2\2\u00b6")
        buf.write("\u00b7\7p\2\2\u00b7\62\3\2\2\2\u00b8\u00b9\7y\2\2\u00b9")
        buf.write("\u00ba\7j\2\2\u00ba\u00bb\7k\2\2\u00bb\u00bc\7n\2\2\u00bc")
        buf.write("\u00bd\7g\2\2\u00bd\64\3\2\2\2\u00be\u00bf\7#\2\2\u00bf")
        buf.write("\66\3\2\2\2\u00c0\u00c1\7/\2\2\u00c18\3\2\2\2\u00c2\u00c3")
        buf.write("\7,\2\2\u00c3\u00c4\7,\2\2\u00c4:\3\2\2\2\u00c5\u00c6")
        buf.write("\7,\2\2\u00c6<\3\2\2\2\u00c7\u00c8\7\61\2\2\u00c8>\3\2")
        buf.write("\2\2\u00c9\u00ca\7\61\2\2\u00ca\u00cb\7\61\2\2\u00cb@")
        buf.write("\3\2\2\2\u00cc\u00cd\7\'\2\2\u00cdB\3\2\2\2\u00ce\u00cf")
        buf.write("\7-\2\2\u00cfD\3\2\2\2\u00d0\u00d1\7>\2\2\u00d1F\3\2\2")
        buf.write("\2\u00d2\u00d3\7@\2\2\u00d3H\3\2\2\2\u00d4\u00d5\7>\2")
        buf.write("\2\u00d5\u00d6\7?\2\2\u00d6J\3\2\2\2\u00d7\u00d8\7@\2")
        buf.write("\2\u00d8\u00d9\7?\2\2\u00d9L\3\2\2\2\u00da\u00db\7?\2")
        buf.write("\2\u00db\u00dc\7?\2\2\u00dcN\3\2\2\2\u00dd\u00de\7#\2")
        buf.write("\2\u00de\u00df\7?\2\2\u00dfP\3\2\2\2\u00e0\u00e1\7(\2")
        buf.write("\2\u00e1\u00e2\7(\2\2\u00e2R\3\2\2\2\u00e3\u00e4\7~\2")
        buf.write("\2\u00e4\u00e5\7~\2\2\u00e5T\3\2\2\2\u00e6\u00e7\7p\2")
        buf.write("\2\u00e7\u00e8\7w\2\2\u00e8\u00fe\7o\2\2\u00e9\u00ea\7")
        buf.write("v\2\2\u00ea\u00eb\7g\2\2\u00eb\u00ec\7z\2\2\u00ec\u00fe")
        buf.write("\7v\2\2\u00ed\u00ee\7d\2\2\u00ee\u00ef\7q\2\2\u00ef\u00f0")
        buf.write("\7q\2\2\u00f0\u00fe\7n\2\2\u00f1\u00f2\7x\2\2\u00f2\u00f3")
        buf.write("\7q\2\2\u00f3\u00f4\7k\2\2\u00f4\u00fe\7f\2\2\u00f5\u00f6")
        buf.write("\7n\2\2\u00f6\u00f7\7k\2\2\u00f7\u00f8\7u\2\2\u00f8\u00fe")
        buf.write("\7v\2\2\u00f9\u00fa\7f\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fc")
        buf.write("\7e\2\2\u00fc\u00fe\7v\2\2\u00fd\u00e6\3\2\2\2\u00fd\u00e9")
        buf.write("\3\2\2\2\u00fd\u00ed\3\2\2\2\u00fd\u00f1\3\2\2\2\u00fd")
        buf.write("\u00f5\3\2\2\2\u00fd\u00f9\3\2\2\2\u00feV\3\2\2\2\u00ff")
        buf.write("\u0100\7H\2\2\u0100\u0101\7c\2\2\u0101\u0102\7n\2\2\u0102")
        buf.write("\u0103\7u\2\2\u0103\u0109\7g\2\2\u0104\u0105\7V\2\2\u0105")
        buf.write("\u0106\7t\2\2\u0106\u0107\7w\2\2\u0107\u0109\7g\2\2\u0108")
        buf.write("\u00ff\3\2\2\2\u0108\u0104\3\2\2\2\u0109X\3\2\2\2\u010a")
        buf.write("\u010c\t\2\2\2\u010b\u010a\3\2\2\2\u010c\u010d\3\2\2\2")
        buf.write("\u010d\u010b\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u0115\3")
        buf.write("\2\2\2\u010f\u0111\7\60\2\2\u0110\u0112\t\2\2\2\u0111")
        buf.write("\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0111\3\2\2\2")
        buf.write("\u0113\u0114\3\2\2\2\u0114\u0116\3\2\2\2\u0115\u010f\3")
        buf.write("\2\2\2\u0115\u0116\3\2\2\2\u0116Z\3\2\2\2\u0117\u011b")
        buf.write("\t\3\2\2\u0118\u011a\t\4\2\2\u0119\u0118\3\2\2\2\u011a")
        buf.write("\u011d\3\2\2\2\u011b\u0119\3\2\2\2\u011b\u011c\3\2\2\2")
        buf.write("\u011c\\\3\2\2\2\u011d\u011b\3\2\2\2\u011e\u011f\t\5\2")
        buf.write("\2\u011f\u0120\3\2\2\2\u0120\u0121\b/\2\2\u0121^\3\2\2")
        buf.write("\2\u0122\u0126\t\6\2\2\u0123\u0125\13\2\2\2\u0124\u0123")
        buf.write("\3\2\2\2\u0125\u0128\3\2\2\2\u0126\u0127\3\2\2\2\u0126")
        buf.write("\u0124\3\2\2\2\u0127\u0129\3\2\2\2\u0128\u0126\3\2\2\2")
        buf.write("\u0129\u012a\b\60\2\2\u012a`\3\2\2\2\u012b\u012c\7}\2")
        buf.write("\2\u012cb\3\2\2\2\u012d\u012e\7\177\2\2\u012ed\3\2\2\2")
        buf.write("\u012f\u0133\7$\2\2\u0130\u0132\n\7\2\2\u0131\u0130\3")
        buf.write("\2\2\2\u0132\u0135\3\2\2\2\u0133\u0131\3\2\2\2\u0133\u0134")
        buf.write("\3\2\2\2\u0134\u0136\3\2\2\2\u0135\u0133\3\2\2\2\u0136")
        buf.write("\u0137\7$\2\2\u0137f\3\2\2\2\13\2\u00fd\u0108\u010d\u0113")
        buf.write("\u0115\u011b\u0126\u0133\3\b\2\2")
        return buf.getvalue()


class GLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    TYPE = 42
    BOOL = 43
    NUMBER = 44
    IDENTIFIER = 45
    WP = 46
    COMMENT = 47
    BLOCK_OPEN = 48
    BLOCK_CLOSE = 49
    STRING = 50

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "','", "']'", "'..'", "':'", "'='", "'func'", "'()'", 
            "'->'", "'('", "')'", "'+='", "'-='", "'*='", "'/='", "'//='", 
            "'%='", "'**='", "'return'", "'if'", "'else if'", "'else'", 
            "'for'", "'in'", "'while'", "'!'", "'-'", "'**'", "'*'", "'/'", 
            "'//'", "'%'", "'+'", "'<'", "'>'", "'<='", "'>='", "'=='", 
            "'!='", "'&&'", "'||'", "'{'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "TYPE", "BOOL", "NUMBER", "IDENTIFIER", "WP", "COMMENT", "BLOCK_OPEN", 
            "BLOCK_CLOSE", "STRING" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "TYPE", "BOOL", "NUMBER", "IDENTIFIER", 
                  "WP", "COMMENT", "BLOCK_OPEN", "BLOCK_CLOSE", "STRING" ]

    grammarFileName = "G.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


